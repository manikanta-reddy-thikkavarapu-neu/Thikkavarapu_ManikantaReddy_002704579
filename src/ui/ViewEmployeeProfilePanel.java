/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.EmployeeProfile;
import model.EmployeeProfileHistory;

/**
 *
 * @author tmani
 */
public class ViewEmployeeProfilePanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewEmployeeProfilePanel
     */
    EmployeeProfileHistory history;

    public ViewEmployeeProfilePanel(EmployeeProfileHistory history) {
        initComponents();
        this.history = history;
        populateEmployeeProfileTable("normal");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        delete = new javax.swing.JButton();
        view = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("View Employee Profile History");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee Id", "Age", "Gender", "Start Date", "Level", "Team Info", "Position Title", "Cell Phone Number", "Email Address", "Photo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        view.setText("View");
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(view)
                        .addGap(18, 18, 18)
                        .addComponent(delete)
                        .addGap(200, 200, 200))))
            .addGroup(layout.createSequentialGroup()
                .addGap(303, 303, 303)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(view)
                    .addComponent(delete))
                .addContainerGap(276, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int selectedRowIndex = jTable1.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        EmployeeProfile selectedEmployeeProfile = (EmployeeProfile) model.getValueAt(selectedRowIndex, 0);
        history.deleteEmployeeProfile(selectedEmployeeProfile);
        JOptionPane.showMessageDialog(this, "Employee profile deleted");
        populateEmployeeProfileTable("normal");
        MainJFrame.refreshCreateEmployeeProfileHistory(history);
    }//GEN-LAST:event_deleteActionPerformed

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
        int selectedRowIndex = jTable1.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        EmployeeProfile selectedEmployeeProfile = (EmployeeProfile) model.getValueAt(selectedRowIndex, 0);

        MainJFrame.setCreateEmployeeProfilePanel(history, selectedEmployeeProfile);
    }//GEN-LAST:event_viewActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed

        if (jTable1.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "No employee profile details to search.");
        } else if (searchTextField.getText().isEmpty()) {
            populateEmployeeProfileTable("normal");
        } else {
            history.clearSearchEmployeeProfileList();
            boolean notFound = true;
            for (EmployeeProfile ep : history.getEmployeeProfileHistoryList()) {
                if (ep.getName().toLowerCase().contains(searchTextField.getText().toLowerCase()) || ep.getEmployeeId().toString().toLowerCase().contains(searchTextField.getText().toLowerCase()) || ep.getAge().toString().toLowerCase().contains(searchTextField.getText().toLowerCase()) || ep.getGender().toLowerCase().contains(searchTextField.getText().toLowerCase()) || ep.getStartDate().toLowerCase().contains(searchTextField.getText().toLowerCase()) || ep.getLevel().toLowerCase().contains(searchTextField.getText().toLowerCase()) || ep.getTeamInfo().toLowerCase().contains(searchTextField.getText().toLowerCase())|| ep.getPositionTitle().toLowerCase().contains(searchTextField.getText().toLowerCase()) || ep.getCellPhoneNumber().toString().toLowerCase().contains(searchTextField.getText().toLowerCase()) || ep.getEmailAddress().toLowerCase().contains(searchTextField.getText().toLowerCase())) {
                    history.addNewSearchEmployeeProfile(ep);
                    notFound = false;
                }
            }
            if(notFound) {
                JOptionPane.showMessageDialog(this, "No employee profile data available with the search text : " + searchTextField.getText());
            }
            else {
                populateEmployeeProfileTable("search");
            }
        }
    }//GEN-LAST:event_searchButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JButton view;
    // End of variables declaration//GEN-END:variables

    private void populateEmployeeProfileTable(String searchOrNormal) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

       ArrayList<EmployeeProfile> employeeIterateObj;
        
        if(searchOrNormal.equals("normal")) {
            employeeIterateObj = history.getEmployeeProfileHistoryList();
        }
        else {
            employeeIterateObj = history.getSearchEmployeeProfileHistoryList();
        }
        
        for (EmployeeProfile ep : employeeIterateObj) {
            Object[] row = new Object[11];
            row[0] = ep;
            row[1] = ep.getEmployeeId();
            row[2] = ep.getAge();
            row[3] = ep.getGender();
            row[4] = ep.getStartDate();
            row[5] = ep.getLevel();
            row[6] = ep.getTeamInfo();
            row[7] = ep.getPositionTitle();
            row[8] = ep.getCellPhoneNumber();
            row[9] = ep.getEmailAddress();
            row[10] = "Uploaded";
            
            model.addRow(row);
        }
    }
}
